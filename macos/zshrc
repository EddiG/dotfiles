# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/eddig/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"
 
# Set default editor
export EDITOR='nvim'

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Force correct locale
export LC_ALL=en_US.UTF-8

# Aliases
# alias ll='gls -lah --color=auto --group-directories-first'
# brew install lsd + requires nerd font for a funcy icons
alias ll='lsd -lah --group-dirs first'
alias du='gdu -Phc -d 1'
alias dusort='gdu -Phc -d 1 | sort -h'
alias df='gdf -Th'
alias mkdir='mkdir -pv'
alias myip="curl http://ip-api.com/line; echo"
alias passwords='gpg --decrypt ~/passwords.gpg | less'
alias passwords_decrypt='gpg --output /tmp/passwords -d ~/passwords.gpg && vim /tmp/passwords'
alias passwords_encrypt='gpg --output ~/passwords.gpg --cipher-algo AES256 --symmetric /tmp/passwords && rm -P /tmp/passwords'
alias vim='nvim'
alias docker_rmi_dangling='docker rmi $(docker images -q -f dangling=true)'
alias screenfetch='neofetch'
alias cpsafe='rsync -av --progress --exclude node_modules --exclude .git'

# Get linux command cheatsheet from http://cheat.sh/
cheatsh() {
  args="${*:?How to use: cheatsh bash copy with progress bar}"
  query=${args// /+}
  query=${query/+//}
  curl cheat.sh/$query
}

# Add brew's sbin
[ -d /usr/local/sbin ] && export PATH="/usr/local/sbin:$PATH"

# OpenJDK for Java development
export PATH="/usr/local/opt/openjdk@11/bin:$PATH"

# Update PATH for the Istio
# [ -d ~/.local/share/istio/bin ] && export PATH="~/.local/share/istio/bin:$PATH"

# Add rbenv shims (ruby environments manager)
# [ -d ~/.rbenv/shims ] && export PATH="~/.rbenv/shims:$PATH"
eval "$(rbenv init - zsh)"

# Fuzzy searcher files (fzf + ripgrep)
# brew install fzf ripgrep
# export FZF_DEFAULT_COMMAND='rg --files --follow --hidden'
# brew install fzf fd
export FZF_DEFAULT_COMMAND='fd --type file --follow --hidden --exclude .git --exclude node_modules'
alias fzfp="fzf --preview 'bat --color=always --style=numbers --line-range=:500 {}'"

# Configure nvm (Node.js version manager)
export NVM_DIR="$HOME/.nvm"
[ -f "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm

# Configure autojump
# brew install autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# Configure nnn
export NNN_OPTS="do" 
export NNN_PLUG="c:fzcd;"
export NNN_FIFO="/tmp/nnn.fifo"

n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    # export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # This will create a fifo where all nnn selections will be written to
    NNN_FIFO="$(mktemp)"
    rm "$NNN_FIFO"
    export NNN_FIFO
    (umask 077; mkfifo "$NNN_FIFO")

    # Preview command
    preview_cmd="~/nnn_preview_cmd.sh"

    tmux new "nnn" ";" set-option -g status off ";" split -l 60% -e "NNN_FIFO=$NNN_FIFO" -dh "$preview_cmd"

    rm -f "$NNN_FIFO"
}

# To customize prompt, run `p10k configure` or edit ~/Projects/Pet/dotfiles/macos/p10k.zsh.
[[ ! -f ~/Projects/Pet/dotfiles/macos/p10k.zsh ]] || source ~/Projects/Pet/dotfiles/macos/p10k.zsh
